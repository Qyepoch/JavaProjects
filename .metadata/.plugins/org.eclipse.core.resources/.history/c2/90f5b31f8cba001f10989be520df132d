<?xml version="1.0" encoding="UTF-8"?>
<!-- 文档类型定义（DOCTYPE），指定了该 XML 文档是一个 MyBatis 的 Mapper 文件 ;DTD 用于定义 XML 文档的结构、元素和属性等-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "D:\App Station\Coding\Exclips\mybatis-3-mapper.dtd">

<!-- 需要定义UserMapper.xml文件与对应的UserDao接口类之间的关系 -->
<mapper namespace="ltd.newbee.mall.dao.TestUserDao">

<!-- 配置表结构和实体类的对应关系 -->
<resultMap type="ltd.newbee.mall.entity.TestUser" id="UserResult">
	<result property="id" column="id"/>
	<result property="name" column="name"/>
	<result property="password" column="password"/>
</resultMap>

<select id="findAllUser" resultMap="UserResult">
	select tb_id,tb_name,tb_password from tb_user 
	order by tb_id desc
</select>

<insert id="insertUser" parameterType="ltd.newbee.mall.entity.TestUser" >
	insert into tb_user(tb_name,tb_password) 
	values(#{name},#{password})
</insert>

<update id="updUser" parameterType="ltd.newbee.mall.entity.TestUser">
	update tb_user set tb_name=#{name},tb_password=#{password} where tb_id=#{id}
</update>

<delete id="delUser" parameterType="int">
	delete from tb_user where tb_id=#{id}
</delete>


</mapper>